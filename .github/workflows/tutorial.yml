#!ESTE ARCHIVO ES UN TUTORIAL, NO CAMBIARLO EN ABSOLUTO. 
#! Si Quieres crear tu propio archivo YML, usa el sanityTemplate.yml para copiar y pegar en tu propio archivo yml...
#! Para crear tu propio archivo yml, usa tu nombre como SUFIJO del nombre del archivo; ejemplo: sanity-ely.yml
name: 🧪Example Test in CI Pipeline with Cypress
run-name: ${{github.actor}}👨🏻‍🔬 triggered Test in ${{github.ref_name}}

# on:
#     push:
#         branches-ignore: [main, QA]
#*Esto indica que se ejecutará con PUSH o MERGE en cualquier rama que no sea 'main' ni 'QA'

on: [workflow_dispatch] #Esta opción es para este Tutorial, para que no se ejecute en CI.

jobs:
  #* Este es un Nombre de este Job, puedes dejarlo como está.
  TestSuite:
    #* Este parámetro indica que se correrá en un Sistema Operativo. No cambiar.
    runs-on: ubuntu-latest

    #todo: Aquí comienzan los pasos que se ejecutarán en este Job:
    steps:
    #* Este paso, copia y pega literalmente el repo que tenemos.
    - name: 💻Checkout #? el Name es opcional, e indica el nombre del Step. Uses es la dependencia.
      uses: actions/checkout@v4

    - name: 💿Install Node.js
      uses: actions/setup-node@v4
      with: #? El with se usa para indicar qué parámetro se usa con la dependencia.
        node-version: 20
        #* Considera que el with dependerá del uso de la dependencia.

    - name: 🍙 Bun Setup
      uses: oven-sh/setup-bun@v1
      #? Este paso es para instalar el Bun, que es un gestor de dependencias de Oven. Recomiendo usarlo.

    - name: 🧬Install All Dependencies
      run: |
        bun install
      #? Este paso es para instalar todas las dependencias del proyecto.

      #* Esta dependencia de CI es exclusiva de Cypress que nos permite ejecutar sin necesidad de hacer el build.
      #! En este Step DEBES MODIFICAR el Test Suite a ejecutar.
    - name: 🧪Cypress Run Test Coverage in Chrome
      uses: cypress-io/github-action@v4
      with:
        browser: chrome
        command: |
          bun run test:chrome cypress/e2e/tests/checkout/addProductToCart.cy.js

    #* Esto es para guardar el reporte previamente generado y colocarlo en Github.
    - name: 📊Upload Artifact ☕Mochawesome HTML Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mochaTest-report
        path: mochawesome-report
    #? el argumento "if: always()" es un comando condicional: significa que Si pasa exitosamente o no el paso anterior, corre este Paso.
